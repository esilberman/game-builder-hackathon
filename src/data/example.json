{
    "code": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Retro Snake Game</title>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n    <link href=\"https://fonts.googleapis.com/css2?family=VT323&display=swap\" rel=\"stylesheet\">\n    <style>\n        body {\n            font-family: 'VT323', monospace;\n            background-color: #000;\n            margin: 0;\n            padding: 0;\n            overflow: hidden;\n        }\n        canvas {\n            border: 1px solid #fff;\n        }\n    </style>\n</head>\n<body>\n    <canvas id=\"gameCanvas\" width=\"800\" height=\"600\"></canvas>\n    <script type=\"module\">\n        const canvas = document.getElementById('gameCanvas');\n        const ctx = canvas.getContext('2d');\n        const scale = 20;\n        let score = 0;\n        let speed = 100;\n        let snake = [\n            {x: scale * 5, y: scale * 5},\n            {x: scale * 4, y: scale * 5},\n            {x: scale * 3, y: scale * 5},\n            {x: scale * 2, y: scale * 5},\n            {x: scale * 1, y: scale * 5}\n        ];\n        let direction = 'right';\n        let food = {x: Math.floor(Math.random() * (canvas.width / scale)) * scale, y: Math.floor(Math.random() * (canvas.height / scale)) * scale};\n\n        function draw() {\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            ctx.fillStyle = '#0f0';\n            for (let i = 0; i < snake.length; i++) {\n                ctx.fillRect(snake[i].x, snake[i].y, scale, scale);\n            }\n            ctx.fillStyle = '#f00';\n            ctx.fillRect(food.x, food.y, scale, scale);\n            ctx.font = '24px VT323';\n            ctx.fillStyle = '#fff';\n            ctx.textAlign = 'left';\n            ctx.textBaseline = 'top';\n            ctx.fillText('Score: ' + score, 10, 10);\n        }\n\n        function update() {\n            let head = snake[0];\n            let newHead;\n            if (direction === 'right') {\n                newHead = {x: head.x + scale, y: head.y};\n            } else if (direction === 'left') {\n                newHead = {x: head.x - scale, y: head.y};\n            } else if (direction === 'up') {\n                newHead = {x: head.x, y: head.y - scale};\n            } else if (direction === 'down') {\n                newHead = {x: head.x, y: head.y + scale};\n            }\n            snake.unshift(newHead);\n            if (snake[0].x === food.x && snake[0].y === food.y) {\n                score++;\n                food = {x: Math.floor(Math.random() * (canvas.width / scale)) * scale, y: Math.floor(Math.random() * (canvas.height / scale)) * scale};\n            } else {\n                snake.pop();\n            }\n            if (snake[0].x < 0 || snake[0].x >= canvas.width || snake[0].y < 0 || snake[0].y >= canvas.height) {\n                alert('Game Over!');\n                location.reload();\n            }\n            for (let i = 1; i < snake.length; i++) {\n                if (snake[0].x === snake[i].x && snake[0].y === snake[i].y) {\n                    location.reload();\n                }\n            }\n        }\n\n        function loop() {\n            update();\n            draw();\n        }\n        setInterval(loop, speed);\n\n        document.addEventListener('keydown', (e) => {\n            if (e.key === 'ArrowRight' && direction !== 'left') {\n                direction = 'right';\n            } else if (e.key === 'ArrowLeft' && direction !== 'right') {\n                direction = 'left';\n            } else if (e.key === 'ArrowUp' && direction !== 'down') {\n                direction = 'up';\n            } else if (e.key === 'ArrowDown' && direction !== 'up') {\n                direction = 'down';\n            }\n        });\n        document.addEventListener('touchstart', (e) => {\n            let touch = e.touches[0];\n            let x = touch.clientX;\n            let y = touch.clientY;\n            if (x > canvas.width / 2 && y < canvas.height / 2) {\n                direction = 'right';\n            } else if (x < canvas.width / 2 && y < canvas.height / 2) {\n                direction = 'up';\n            } else if (x > canvas.width / 2 && y > canvas.height / 2) {\n                direction = 'down';\n            } else if (x < canvas.width / 2 && y > canvas.height / 2) {\n                direction = 'left';\n            }\n        });\n    </script>\n</body>\n</html>"
}